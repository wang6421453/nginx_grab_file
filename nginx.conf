
#user  nobody;
user root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format json_combined escape=json
   	 '{"serverName":"$server_name","remoteAddr":"$remote_addr","remoteUser":"$remote_user","timeLocal":"$time_local","request":"$request","reqBody":"$_request_body",'
    	 '"status":"$status","bodyByteSend":"$body_bytes_sent","httpReferer":"$http_referer","httpUserAgent":"$http_user_agent","httpXForwardedFor":"$http_x_forwarded_for",'
	 '"respBody":"$resp_body","respContentEncoding":"$resp_content_encoding","respContentType":"$resp_content_type"}';
    
    access_log  logs/wl_json.log json_combined;

    sendfile        on;
    #tcp_nopush     on;

    client_max_body_size 100m;
    client_body_buffer_size 100m;
    #keepalive_timeout  0;
    keepalive_timeout  0;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        charset utf8;

	set $resp_body "";	
	set $resp_content_encoding "";
	set $resp_content_type "";
	set $_request_body "";

        #access_log  logs/wl.log;

       # location / {
       #    root   html;
       #    index  index.html index.htm;
       # }
	location /csdn/ {
	    proxy_pass http://blog.csdn.net/;
	}
	location /lua {
            content_by_lua '
	       ngx.header.content_type = "text/html";
	       ngx.say("Hello(你好) Lua");
	    '; 
	}
	location /luafile {
	    lua_code_cache off;
	    content_by_lua_file lua_script/demo.lua;
	}
	location / {
	    proxy_pass http://172.10.4.160:8082;
	}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
	
	location ~ .*\.(gif|jpeg|jpg|png|bmp|swf)$ {
		access_log off;
	}
	
	lua_need_request_body on;

	body_filter_by_lua_file lua_script/body_filter.lua;
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
